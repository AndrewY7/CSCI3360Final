{"version":3,"sources":["components/Navbar.js","pages/Home.js","pages/About.js","firebase.js","pages/Profile.js","pages/HealthAssistant.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","location","useLocation","React","createElement","className","Link","to","pathname","Home","About","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","Profile","isLoggedIn","setIsLoggedIn","useState","isLoading","setIsLoading","error","setError","email","setEmail","password","setPassword","userProfile","setUserProfile","isRegistering","setIsRegistering","isEditing","setIsEditing","editableProfile","setEditableProfile","age","sex","height","weight","activity","goals","selectedMetrics","setSelectedMetrics","bmi","timeRange","setTimeRange","useEffect","unsubscribe","onAuthStateChanged","async","user","userDoc","getDoc","doc","uid","exists","data","profile","basicProfile","name","displayName","photoURL","createdAt","serverTimestamp","setDoc","console","handleGoogleSignIn","provider","GoogleAuthProvider","signInWithPopup","message","handleLogin","e","preventDefault","signInWithEmailAndPassword","handleRegister","createUserWithEmailAndPassword","calculateBMR","parseFloat","isNaN","toLowerCase","getActivityMultiplier","sedentary","light","moderate","heavy","athlete","onClick","signOut","onSubmit","userDocRef","currentUser","currentDoc","currentData","newBMI","Math","pow","toFixed","historyEntry","date","Date","toISOString","updatedProfile","updatedAt","metricsHistory","type","value","onChange","prev","target","placeholder","rows","toDate","toLocaleDateString","round","length","checked","ResponsiveContainer","width","LineChart","history","now","filter","entry","entryDate","getFilteredData","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","YAxis","yAxisId","orientation","stroke","domain","Tooltip","labelFormatter","formatter","Legend","Line","dot","connectNulls","viewBox","fill","fillRule","d","clipRule","required","INITIAL_MESSAGE","WELCOME_BACK_MESSAGE","HealthAssistant","messages","setMessages","inputMessage","setInputMessage","userId","setUserId","isUpdatingProfile","setIsUpdatingProfile","chatContainerRef","useRef","loadUserProfile","role","content","current","scrollTop","scrollHeight","isProfileComplete","every","field","userData","chatHistory","formattedHistory","map","msg","timestamp","saveChatHistory","messageHistory","newMessages","slice","updateDoc","lastInteraction","handleSend","trim","newMessage","updatedMessages","includes","updateMessage","finalMessages","patterns","log","key","pattern","Object","entries","match","goalsMatch","keys","processUserProfile","existingData","merge","saveUserProfile","confirmMessage","response","BACKEND_URL","fetch","method","headers","Content-Type","body","JSON","stringify","credentials","ok","Error","json","callOpenAI","xmlns","ref","index","split","line","i","renderMessage","cx","cy","r","strokeWidth","onKeyPress","disabled","App","Router","Routes","Route","path","element","Navigate","replace","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9baa3237.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nfunction Navbar() {\n  const location = useLocation();\n\n  return (\n    <nav className=\"bg-white shadow-md py-4 px-8 flex items-center\">\n      <div className=\"text-2xl font-bold text-red-500 mr-auto\">\n        Healthai\n      </div>\n      \n      <div className=\"flex items-center space-x-6\">\n        <Link \n          to=\"/about\" \n          className={`${\n            location.pathname === '/about' \n              ? 'text-red-500' \n              : 'text-gray-700 hover:text-red-500'\n          }`}\n        >\n          About\n        </Link>\n        <Link \n          to=\"/healthassistant\" \n          className={`${\n            location.pathname === '/healthassistant' \n              ? 'text-red-500' \n              : 'text-gray-700 hover:text-red-500'\n          }`}\n        >\n          Health Assistant\n        </Link>\n        <Link \n          to=\"/profile\" \n          className={`${\n            location.pathname === '/profile'\n              ? 'bg-red-600 text-white'\n              : 'bg-red-500 text-white hover:bg-red-600'\n          } py-2 px-4 rounded transition-colors`}\n        >\n          My Profile\n        </Link>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;","import React from 'react';\n\nfunction Home() {\n  return <h1 className=\"text-2xl font-bold text-center mt-10\">Home Page</h1>;\n}\n\nexport default Home;","import React from 'react';\n\nfunction About() {\n  return (\n    <div className=\"max-w-4xl mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold text-center mb-8\">About Healthai Assistant</h1>\n      \n      <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n        <h2 className=\"text-xl font-semibold mb-4\">Getting Started</h2>\n        <p className=\"text-gray-700 mb-4\">\n          To make the most of your Healthai experience, please log in or create an account. \n          This allows us to save your profile information and track your progress over time.\n        </p>\n        <div className=\"bg-blue-50 border-l-4 border-blue-500 p-4 mb-4\">\n          <p className=\"text-blue-700\">\n            💡 Tip: Use Google Sign-In for a quick and seamless login experience!\n          </p>\n        </div>\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n        <h2 className=\"text-xl font-semibold mb-4\">Key Features</h2>\n        <div className=\"space-y-6\">\n          <div>\n            <h3 className=\"text-lg font-medium text-red-600 mb-2\">Personalized Caloric Calculations</h3>\n            <p className=\"text-gray-700\">\n              Using the scientifically-backed Mifflin-St Jeor Formula, we provide accurate \n              daily caloric needs based on your profile and activity level. This helps create \n              realistic and achievable nutrition goals.\n            </p>\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-medium text-red-600 mb-2\">Custom Exercise Plans</h3>\n            <p className=\"text-gray-700\">\n              Receive tailored workout recommendations based on your:\n            </p>\n            <ul className=\"list-disc list-inside ml-4 mt-2 text-gray-700\">\n              <li>Fitness goals</li>\n              <li>Available equipment</li>\n              <li>Time constraints</li>\n              <li>Current fitness level</li>\n            </ul>\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-medium text-red-600 mb-2\">Health & Wellness Guidance</h3>\n            <p className=\"text-gray-700\">\n              Get evidence-based answers to your health-related questions, including nutrition \n              advice, exercise techniques, and general wellness tips.\n            </p>\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-medium text-red-600 mb-2\">Mental Health Support</h3>\n            <p className=\"text-gray-700\">\n              Access supportive guidance for mental well-being, stress management, and \n              maintaining a healthy work-life balance. Note: While we provide general support, \n              please consult healthcare professionals for specific mental health concerns.\n            </p>\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-medium text-red-600 mb-2\">Calendar Integration</h3>\n            <p className=\"text-gray-700\">\n              Seamlessly schedule your workouts using Google Calendar integration. The \n              assistant helps you find the perfect time slots based on your availability \n              and preferences.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\n        <h2 className=\"text-xl font-semibold mb-4\">How to Use</h2>\n        <ol className=\"list-decimal list-inside space-y-3 text-gray-700\">\n          <li className=\"ml-4\">Sign in or create an account to get started</li>\n          <li className=\"ml-4\">Complete your profile with accurate information</li>\n          <li className=\"ml-4\">Share your health and fitness goals with the assistant</li>\n          <li className=\"ml-4\">Receive personalized recommendations and guidance</li>\n          <li className=\"ml-4\">Use the chat interface to ask questions and get real-time advice</li>\n          <li className=\"ml-4\">Schedule and track your workouts through calendar integration</li>\n        </ol>\n        <div className=\"mt-6 p-4 bg-yellow-50 border-l-4 border-yellow-500\">\n          <p className=\"text-yellow-700\">\n            ⚠️ Important: Always consult with healthcare professionals before starting any new \n            exercise or diet program, especially if you have pre-existing conditions.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAXcR3T3b1n2Si60NpBbgQvvz7QF8HeEbE\",\n    authDomain: \"healthai-780dc.firebaseapp.com\",\n    projectId: \"healthai-780dc\",\n    storageBucket: \"healthai-780dc.firebasestorage.app\",\n    messagingSenderId: \"321626895600\",\n    appId: \"1:321626895600:web:31a3adf86bab853d01be35\",\n    measurementId: \"G-K14FSKC8GR\"\n  };\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\nexport default app;","import React, { useState, useEffect } from 'react';\nimport { \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  GoogleAuthProvider,\n  signInWithPopup \n} from 'firebase/auth';\nimport { doc, getDoc, setDoc, serverTimestamp } from 'firebase/firestore';\nimport { auth, db } from '../firebase';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n\n\nfunction Profile() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userProfile, setUserProfile] = useState(null);\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editableProfile, setEditableProfile] = useState({\n    age: '',\n    sex: '',\n    height: '',\n    weight: '',\n    activity: '',\n    goals: ''\n  });\n  const [selectedMetrics, setSelectedMetrics] = useState({\n    weight: true,\n    bmi: true\n  });\n  const [timeRange, setTimeRange] = useState('all');\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      setIsLoading(true);\n      if (user) {\n        setIsLoggedIn(true);\n        try {\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\n          if (userDoc.exists()) {\n            setUserProfile(userDoc.data());\n            // Initialize editable profile with existing data\n            if (userDoc.data().profile) {\n              setEditableProfile({\n                age: userDoc.data().profile.age || '',\n                sex: userDoc.data().profile.sex || '',\n                height: userDoc.data().profile.height || '',\n                weight: userDoc.data().profile.weight || '',\n                activity: userDoc.data().profile.activity || '',\n                goals: userDoc.data().profile.goals || ''\n              });\n            }\n          } else {\n            // Create a basic profile for new Google Sign-In users\n            const basicProfile = {\n              profile: {\n                email: user.email,\n                name: user.displayName,\n                photoURL: user.photoURL,\n                createdAt: serverTimestamp()\n              }\n            };\n            await setDoc(doc(db, 'users', user.uid), basicProfile);\n            setUserProfile(basicProfile);\n          }\n        } catch (error) {\n          console.error('Error fetching user profile:', error);\n          setError('Error loading profile data');\n        }\n      } else {\n        setIsLoggedIn(false);\n        setUserProfile(null);\n      }\n      setIsLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const handleGoogleSignIn = async () => {\n    try {\n      const provider = new GoogleAuthProvider();\n      await signInWithPopup(auth, provider);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setError('');\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    setError('');\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const handleProfileUpdate = async (e) => {\n    e.preventDefault();\n    try {\n      const userDocRef = doc(db, 'users', auth.currentUser.uid);\n      const currentDoc = await getDoc(userDocRef);\n      const currentData = currentDoc.exists() ? currentDoc.data() : {};\n  \n      const newBMI = (editableProfile.weight / Math.pow(editableProfile.height / 100, 2)).toFixed(1);\n      \n      const historyEntry = {\n        weight: parseFloat(editableProfile.weight),\n        bmi: parseFloat(newBMI),\n        date: new Date().toISOString(),\n      };\n  \n      const updatedProfile = {\n        ...currentData,\n        profile: {\n          ...currentData.profile,\n          ...editableProfile,\n          updatedAt: serverTimestamp()\n        },\n        metricsHistory: [...(currentData.metricsHistory || []), historyEntry]\n      };\n  \n      await setDoc(userDocRef, updatedProfile);\n      setUserProfile(updatedProfile);\n      setIsEditing(false);\n      setError('');\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      setError('Failed to update profile');\n    }\n  };\n\n  const calculateBMR = (profile) => {\n    if (!profile?.sex || !profile?.weight || !profile?.height || !profile?.age) return null;\n    \n    // Mifflin-St Jeor Formula\n    const weight = parseFloat(profile.weight);\n    const height = parseFloat(profile.height);\n    const age = parseFloat(profile.age);\n    \n    if (isNaN(weight) || isNaN(height) || isNaN(age)) return null;\n\n    return profile.sex.toLowerCase() === 'male'\n      ? 10 * weight + 6.25 * height - 5 * age + 5\n      : 10 * weight + 6.25 * height - 5 * age - 161;\n  };\n\n  const getFilteredData = (history) => {\n    if (!history) return [];\n    \n    const now = new Date();\n    const filtered = history.filter(entry => {\n      const entryDate = new Date(entry.date);\n      switch (timeRange) {\n        case 'week':\n          return now - entryDate <= 7 * 24 * 60 * 60 * 1000;\n        case 'month':\n          return now - entryDate <= 30 * 24 * 60 * 60 * 1000;\n        case 'year':\n          return now - entryDate <= 365 * 24 * 60 * 60 * 1000;\n        default:\n          return true;\n      }\n    });\n    \n    return filtered;\n  };\n\n  const getActivityMultiplier = (activity) => {\n    const multipliers = {\n      sedentary: 1.2,\n      light: 1.375,\n      moderate: 1.55,\n      heavy: 1.725,\n      athlete: 1.9\n    };\n    return multipliers[activity.toLowerCase()] || 1.2;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-red-500\"></div>\n      </div>\n    );\n  }\n\n  if (!isLoggedIn) {\n    return (\n      <div className=\"flex flex-col items-center mt-10\">\n        <h2 className=\"text-2xl font-bold mb-4\">\n          {isRegistering ? 'Register' : 'Login'}\n        </h2>\n        {error && (\n          <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded-lg\">\n            {error}\n          </div>\n        )}\n        <form className=\"w-1/2 max-w-xs\" onSubmit={isRegistering ? handleRegister : handleLogin}>\n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">Email</label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              placeholder=\"Enter email\"\n              required\n            />\n          </div>\n          <div className=\"mb-6\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">Password</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              placeholder=\"Enter password\"\n              required\n            />\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            <button\n              type=\"submit\"\n              className=\"bg-red-500 text-white py-2 px-4 rounded hover:bg-red-600 w-full\"\n            >\n              {isRegistering ? 'Register' : 'Login'}\n            </button>\n            \n            <button\n              type=\"button\"\n              onClick={handleGoogleSignIn}\n              className=\"flex items-center justify-center gap-2 w-full py-2 px-4 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n            >\n              <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                <path\n                  fill=\"#4285F4\"\n                  d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                />\n                <path\n                  fill=\"#34A853\"\n                  d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                />\n                <path\n                  fill=\"#FBBC05\"\n                  d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                />\n                <path\n                  fill=\"#EA4335\"\n                  d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                />\n              </svg>\n              Continue with Google\n            </button>\n\n            <div className=\"text-center text-gray-500 text-sm my-2\">OR</div>\n            \n            <button\n              type=\"button\"\n              onClick={() => setIsRegistering(!isRegistering)}\n              className=\"text-red-500 hover:text-red-600 text-sm\"\n            >\n              {isRegistering \n                ? 'Already have an account? Login' \n                : \"Don't have an account? Register\"}\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-8\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-4xl font-bold\">My Profile</h1>\n        <div className=\"flex gap-4\">\n          {!isEditing && (\n            <button\n              onClick={() => setIsEditing(true)}\n              className=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\"\n            >\n              Edit Profile\n            </button>\n          )}\n          <button\n            onClick={handleLogout}\n            className=\"bg-red-500 text-white py-2 px-4 rounded hover:bg-red-600\"\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"mb-6 p-4 bg-red-100 text-red-700 rounded-lg\">\n          {error}\n        </div>\n      )}\n\n      {isEditing ? (\n        <form onSubmit={handleProfileUpdate} className=\"bg-white p-6 rounded-lg shadow-sm mb-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">Age</label>\n              <input\n                type=\"number\"\n                value={editableProfile.age}\n                onChange={(e) => setEditableProfile(prev => ({...prev, age: e.target.value}))}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700\"\n                placeholder=\"Enter age\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">Sex</label>\n              <select\n                value={editableProfile.sex}\n                onChange={(e) => setEditableProfile(prev => ({...prev, sex: e.target.value}))}\n                className=\"shadow border rounded w-full py-2 px-3 text-gray-700\"\n              >\n                <option value=\"\">Select sex</option>\n                <option value=\"male\">Male</option>\n                <option value=\"female\">Female</option>\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">Height (cm)</label>\n              <input\n                type=\"number\"\n                value={editableProfile.height}\n                onChange={(e) => setEditableProfile(prev => ({...prev, height: e.target.value}))}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700\"\n                placeholder=\"Enter height in cm\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">Weight (kg)</label>\n              <input\n                type=\"number\"\n                value={editableProfile.weight}\n                onChange={(e) => setEditableProfile(prev => ({...prev, weight: e.target.value}))}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700\"\n                placeholder=\"Enter weight in kg\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">Activity Level</label>\n              <select\n                value={editableProfile.activity}\n                onChange={(e) => setEditableProfile(prev => ({...prev, activity: e.target.value}))}\n                className=\"shadow border rounded w-full py-2 px-3 text-gray-700\"\n              >\n                <option value=\"\">Select activity level</option>\n                <option value=\"sedentary\">Sedentary</option>\n                <option value=\"light\">Light</option>\n                <option value=\"moderate\">Moderate</option>\n                <option value=\"heavy\">Heavy</option>\n                <option value=\"athlete\">Athlete</option>\n              </select>\n            </div>\n            <div className=\"md:col-span-2\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">Health Goals</label>\n              <textarea\n                value={editableProfile.goals}\n                onChange={(e) => setEditableProfile(prev => ({...prev, goals: e.target.value}))}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700\"\n                placeholder=\"Enter your health goals\"\n                rows={4}\n              />\n            </div>\n          </div>\n          <div className=\"flex gap-4 mt-6\">\n            <button\n              type=\"submit\"\n              className=\"bg-green-500 text-white py-2 px-4 rounded hover:bg-green-600\"\n            >\n              Save Changes\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => setIsEditing(false)}\n              className=\"bg-gray-500 text-white py-2 px-4 rounded hover:bg-gray-600\"\n            >\n              Cancel\n              </button>\n          </div>\n        </form>\n      ) : userProfile?.profile ? (\n        <div className=\"bg-white p-6 rounded-lg shadow-sm mb-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h2 className=\"text-xl font-semibold\">Profile Information</h2>\n            <span className=\"text-sm text-gray-500\">\n              {userProfile.profile.updatedAt ? \n                `Last updated: ${new Date(userProfile.profile.updatedAt.toDate()).toLocaleDateString()}` \n                : ''}\n            </span>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {/* Basic Info */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-medium text-gray-800 mb-3\">Basic Information</h3>\n              <div className=\"space-y-2\">\n                {userProfile.profile.name && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">Name:</span>\n                    <span className=\"font-medium\">{userProfile.profile.name}</span>\n                  </div>\n                )}\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Email:</span>\n                  <span className=\"font-medium\">{userProfile.profile.email}</span>\n                </div>\n                {userProfile.profile.age && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">Age:</span>\n                    <span className=\"font-medium\">{userProfile.profile.age}</span>\n                  </div>\n                )}\n                {userProfile.profile.sex && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">Sex:</span>\n                    <span className=\"font-medium\">{userProfile.profile.sex}</span>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Physical Metrics */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-medium text-gray-800 mb-3\">Physical Metrics</h3>\n              <div className=\"space-y-2\">\n                {userProfile.profile.height && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">Height:</span>\n                    <span className=\"font-medium\">{userProfile.profile.height} cm</span>\n                  </div>\n                )}\n                {userProfile.profile.weight && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">Weight:</span>\n                    <span className=\"font-medium\">{userProfile.profile.weight} kg</span>\n                  </div>\n                )}\n                {userProfile.profile.height && userProfile.profile.weight && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">BMI:</span>\n                    <span className=\"font-medium\">\n                      {(userProfile.profile.weight / Math.pow(userProfile.profile.height / 100, 2)).toFixed(1)}\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Fitness Info */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-medium text-gray-800 mb-3\">Fitness Information</h3>\n              <div className=\"space-y-2\">\n                {userProfile.profile.activity && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">Activity Level:</span>\n                    <span className=\"font-medium\">{userProfile.profile.activity}</span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Health Goals Section */}\n          {userProfile.profile.goals && (\n            <div className=\"mt-6 bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-medium text-gray-800 mb-3\">Health Goals</h3>\n              <p className=\"text-gray-700\">{userProfile.profile.goals}</p>\n            </div>\n          )}\n\n          {/* Calculated Metrics */}\n          {userProfile.profile.weight && userProfile.profile.height && userProfile.profile.age && userProfile.profile.sex && (\n            <div className=\"mt-6 bg-blue-50 p-4 rounded-lg\">\n              <h3 className=\"font-medium text-blue-800 mb-3\">Daily Caloric Needs</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                  <div className=\"text-sm text-blue-600\">Basal Metabolic Rate (BMR)</div>\n                  <div className=\"font-bold text-lg\">\n                    {Math.round(calculateBMR(userProfile.profile))} kcal\n                  </div>\n                  <div className=\"text-xs text-gray-500 mt-1\">Calories burned at complete rest</div>\n                </div>\n\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                  <div className=\"text-sm text-blue-600\">Maintenance Calories</div>\n                  <div className=\"font-bold text-lg\">\n                    {Math.round(calculateBMR(userProfile.profile) * \n                      getActivityMultiplier(userProfile.profile.activity))} kcal\n                  </div>\n                  <div className=\"text-xs text-gray-500 mt-1\">Daily calories to maintain weight</div>\n                </div>\n\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                  <div className=\"text-sm text-blue-600\">Weight Loss Target</div>\n                  <div className=\"font-bold text-lg\">\n                    {Math.round(calculateBMR(userProfile.profile) * \n                      getActivityMultiplier(userProfile.profile.activity) - 500)} kcal\n                  </div>\n                  <div className=\"text-xs text-gray-500 mt-1\">500 calorie deficit for weight loss</div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Progress Chart */}\n          {userProfile?.metricsHistory && userProfile.metricsHistory.length > 0 && (\n            <div className=\"mt-6 bg-white p-4 rounded-lg shadow-sm\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"font-medium text-blue-800\">Progress Tracking</h3>\n                <div className=\"flex gap-4\">\n                  <div className=\"flex items-center gap-2\">\n                    <label className=\"text-sm text-gray-600\">Show:</label>\n                    <div className=\"flex gap-2\">\n                      <label className=\"inline-flex items-center\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedMetrics.weight}\n                          onChange={() => setSelectedMetrics(prev => ({...prev, weight: !prev.weight}))}\n                          className=\"form-checkbox h-4 w-4 text-blue-600\"\n                        />\n                        <span className=\"ml-2 text-sm\">Weight</span>\n                      </label>\n                      <label className=\"inline-flex items-center\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedMetrics.bmi}\n                          onChange={() => setSelectedMetrics(prev => ({...prev, bmi: !prev.bmi}))}\n                          className=\"form-checkbox h-4 w-4 text-blue-600\"\n                        />\n                        <span className=\"ml-2 text-sm\">BMI</span>\n                      </label>\n                    </div>\n                  </div>\n                  <select\n                    value={timeRange}\n                    onChange={(e) => setTimeRange(e.target.value)}\n                    className=\"text-sm border rounded px-2 py-1\"\n                  >\n                    <option value=\"week\">Last Week</option>\n                    <option value=\"month\">Last Month</option>\n                    <option value=\"year\">Last Year</option>\n                    <option value=\"all\">All Time</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div className=\"h-[400px] w-full\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart\n                    data={getFilteredData(userProfile.metricsHistory)}\n                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis\n                      dataKey=\"date\"\n                      tickFormatter={(date) => new Date(date).toLocaleDateString()}\n                    />\n                    <YAxis yAxisId=\"weight\" orientation=\"left\" stroke=\"#2563eb\" domain={['auto', 'auto']} />\n                    <YAxis yAxisId=\"bmi\" orientation=\"right\" stroke=\"#dc2626\" domain={[15, 35]} />\n                    <Tooltip\n                      labelFormatter={(date) => new Date(date).toLocaleDateString()}\n                      formatter={(value, name) => [value.toFixed(1), name]}\n                    />\n                    <Legend />\n                    {selectedMetrics.weight && (\n                      <Line\n                        yAxisId=\"weight\"\n                        type=\"monotone\"\n                        dataKey=\"weight\"\n                        stroke=\"#2563eb\"\n                        name=\"Weight (kg)\"\n                        dot={true}\n                        connectNulls\n                      />\n                    )}\n                    {selectedMetrics.bmi && (\n                      <Line\n                        yAxisId=\"bmi\"\n                        type=\"monotone\"\n                        dataKey=\"bmi\"\n                        stroke=\"#dc2626\"\n                        name=\"BMI\"\n                        dot={true}\n                        connectNulls\n                      />\n                    )}\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n\n              {/* BMI Scale Reference */}\n              <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n                <h4 className=\"text-sm font-medium text-gray-700 mb-2\">BMI Reference Scale:</h4>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                  <div className=\"text-xs\">\n                    <span className=\"font-medium\">Underweight:</span> &lt; 18.5\n                  </div>\n                  <div className=\"text-xs\">\n                    <span className=\"font-medium\">Normal:</span> 18.5 - 24.9\n                  </div>\n                  <div className=\"text-xs\">\n                    <span className=\"font-medium\">Overweight:</span> 25 - 29.9\n                  </div>\n                  <div className=\"text-xs\">\n                    <span className=\"font-medium\">Obese:</span> ≥ 30\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          \n        </div>\n      ) : (\n        <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-yellow-700\">\n                Your profile is not complete. Click 'Edit Profile' to add your information.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Profile;","import React, { useState, useRef, useEffect } from 'react';\nimport { auth, db } from '../firebase';\nimport { \n  onAuthStateChanged \n} from 'firebase/auth';\nimport { \n  doc, \n  getDoc, \n  setDoc, \n  updateDoc,\n  serverTimestamp \n} from 'firebase/firestore';\n\nconst INITIAL_MESSAGE = `Hi! I'm your personal health assistant. To help you better, I'd like to know a few things about you:\n1. Your age\n2. Your sex (male/female)\n3. Your height (in cm)\n4. Your weight (in kg)\n5. Your physical activity level (sedentary/light/moderate/heavy/athlete)\n6. Your health goals\n\nPlease provide these details so I can give you personalized advice.`;\n\nconst WELCOME_BACK_MESSAGE = \"Welcome back! How may I help you today? If you need to update your profile information, just say 'update profile' and I'll help you with that.\";\n\nfunction HealthAssistant() {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [userProfile, setUserProfile] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isUpdatingProfile, setIsUpdatingProfile] = useState(false);\n  const chatContainerRef = useRef(null);\n\n  // Listen for auth state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        setUserId(user.uid);\n        await loadUserProfile(user.uid);\n      } else {\n        setUserId(null);\n        setUserProfile(null);\n        setMessages([{ role: 'assistant', content: INITIAL_MESSAGE }]);\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  // Auto-scroll chat\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const isProfileComplete = (profile) => {\n    if (!profile) return false;\n    const requiredFields = ['age', 'sex', 'height', 'weight', 'activity', 'goals'];\n    return requiredFields.every(field => profile[field]);\n  };\n\n  const loadUserProfile = async (uid) => {\n    try {\n      const userDoc = await getDoc(doc(db, 'users', uid));\n      if (userDoc.exists()) {\n        const userData = userDoc.data();\n        setUserProfile(userData.profile);\n        \n        if (userData.chatHistory && userData.chatHistory.length > 0) {\n          const formattedHistory = userData.chatHistory.map(msg => ({\n            role: msg.role,\n            content: msg.content,\n            timestamp: msg.timestamp\n          }));\n          setMessages(formattedHistory);\n        } else {\n          setMessages([{\n            role: 'assistant',\n            content: isProfileComplete(userData.profile) ? WELCOME_BACK_MESSAGE : INITIAL_MESSAGE,\n            timestamp: new Date().toISOString()\n          }]);\n        }\n      } else {\n        await setDoc(doc(db, 'users', uid), {\n          createdAt: serverTimestamp(),\n          chatHistory: [{\n            role: 'assistant',\n            content: INITIAL_MESSAGE,\n            timestamp: new Date().toISOString()\n          }]\n        });\n        setMessages([{ \n          role: 'assistant', \n          content: INITIAL_MESSAGE,\n          timestamp: new Date().toISOString()\n        }]);\n      }\n    } catch (error) {\n      console.error('Error loading user profile:', error);\n      setMessages([{ \n        role: 'assistant', \n        content: 'Error loading profile. Please try again.',\n        timestamp: new Date().toISOString()\n      }]);\n    }\n  };\n\n  const saveUserProfile = async (profile) => {\n    if (!userId) return;\n    try {\n      const userDocRef = doc(db, 'users', userId);\n      const userDoc = await getDoc(userDocRef);\n      const existingData = userDoc.exists() ? userDoc.data() : {};\n      \n      const updatedProfile = {\n        ...existingData,\n        profile: {\n          ...(existingData.profile || {}),\n          ...profile,\n          updatedAt: new Date().toISOString()\n        }\n      };\n\n      await setDoc(userDocRef, updatedProfile, { merge: true });\n      return updatedProfile;\n    } catch (error) {\n      console.error('Error saving user profile:', error);\n      throw error;\n    }\n  };\n\n  const saveChatHistory = async (newMessages) => {\n    if (!userId) return;\n    try {\n      const userDocRef = doc(db, 'users', userId);\n      \n      const messageHistory = newMessages.slice(-50).map(msg => ({\n        role: msg.role,\n        content: msg.content,\n        timestamp: new Date().toISOString()\n      }));\n\n      await updateDoc(userDocRef, {\n        chatHistory: messageHistory,\n        lastInteraction: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error('Error saving chat history:', error);\n    }\n  };\n\n  const processUserProfile = (message) => {\n    const patterns = {\n      age: /\\b\\d{1,2}\\b/,\n      sex: /\\b(male|female)\\b/i,\n      height: /\\b\\d{2,3}\\b(?=\\s*cm)/,\n      weight: /\\b\\d{2,3}\\b(?=\\s*kg)/,\n      activity: /\\b(sedentary|light|moderate|heavy|athlete)\\b/i,\n    };\n\n    const profile = {};\n    \n    // Log the message being processed (for debugging)\n    console.log('Processing message:', message);\n\n    for (const [key, pattern] of Object.entries(patterns)) {\n      const match = message.toLowerCase().match(pattern);\n      if (match) {\n        profile[key] = key === 'sex' ? match[0].toLowerCase() : match[0];\n        console.log(`Matched ${key}:`, profile[key]);\n      }\n    }\n\n    // Extract goals (everything after \"goals:\" or numbered list items)\n    const goalsMatch = message.match(/goals:\\s*(.+?)(?=\\n|$)/i) || \n                      message.match(/6\\.\\s*(.+?)(?=\\n|$)/);\n    if (goalsMatch) {\n      profile.goals = goalsMatch[1].trim();\n      console.log('Matched goals:', profile.goals);\n    }\n\n    console.log('Processed profile:', profile);\n    return Object.keys(profile).length >= 3 ? profile : null;\n  };\n\n  const callOpenAI = async (messageHistory) => {\n    try {\n      const BACKEND_URL = process.env.NODE_ENV === 'production' \n        ? 'https://healthai-tan2.onrender.com'  \n        : 'http://localhost:3001';\n  \n      const response = await fetch(`${BACKEND_URL}/api/chat`, {  \n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ messages: messageHistory }),\n        credentials: 'omit'\n      });\n  \n      if (!response.ok) {\n        throw new Error('Failed to get response from OpenAI');\n      }\n  \n      const data = await response.json();\n      return data.message;\n    } catch (error) {\n      console.error('Error calling OpenAI:', error);\n      throw error;\n    }\n  };\n\n  const handleSend = async () => {\n    if (!inputMessage.trim()) return;\n  \n    const newMessage = {\n      role: 'user',\n      content: inputMessage,\n      timestamp: new Date().toISOString()\n    };\n  \n    const updatedMessages = [...messages, newMessage];\n    setMessages(updatedMessages);\n    setInputMessage('');\n    setIsLoading(true);\n  \n    try {\n      // Profile-related actions only for logged-in users\n      if (userId) {\n        // Check if user wants to update profile\n        if (inputMessage.toLowerCase().includes('update profile')) {\n          setIsUpdatingProfile(true);\n          const updateMessage = {\n            role: 'assistant',\n            content: INITIAL_MESSAGE,\n            timestamp: new Date().toISOString()\n          };\n          const finalMessages = [...updatedMessages, updateMessage];\n          setMessages(finalMessages);\n          await saveChatHistory(finalMessages);\n          setIsLoading(false);\n          return;\n        }\n  \n        // Process profile information if updating or not set\n        if (isUpdatingProfile || !userProfile) {\n          const profile = processUserProfile(inputMessage);\n          if (profile) {\n            await saveUserProfile(profile);\n            setUserProfile(profile);\n            setIsUpdatingProfile(false);\n            const confirmMessage = {\n              role: 'assistant',\n              content: \"Profile updated successfully! How may I help you today?\",\n              timestamp: new Date().toISOString()\n            };\n            const finalMessages = [...updatedMessages, confirmMessage];\n            setMessages(finalMessages);\n            await saveChatHistory(finalMessages);\n            setIsLoading(false);\n            return;\n          }\n        }\n      }\n  \n      // Prepare message history with appropriate system message\n      const messageHistory = [\n        {\n          role: 'system',\n          content: `You are a helpful health assistant. ${\n            userId && userProfile ? \n            `User profile: Age: ${userProfile.age}, Sex: ${userProfile.sex}, Height: ${userProfile.height}cm, Weight: ${userProfile.weight}kg, Activity: ${userProfile.activity}\\nGoals: ${userProfile.goals}` \n            : 'No profile information available. Provide general health advice and inform user they can save their profile by logging in.'\n          }\n          \n          Key responsibilities:\n          1. ${userId ? 'If user profile is not set, focus on collecting missing profile information' : 'Provide general health advice'}\n          2. ${userId ? 'Once profile is set, provide personalized health advice' : 'Recommend logging in for personalized advice'}\n          3. Use Mifflin-St Jeor Formula for caloric calculations when relevant\n          4. Focus on evidence-based recommendations\n          5. Be encouraging and supportive\n          6. For mental health questions, provide general guidance and recommend professional help when appropriate\n          7. ${userId ? 'If user asks to update profile, guide them through the update process' : 'If user asks about profile features, inform them they need to log in'}\n          \n          Always maintain a professional yet friendly tone.`\n        },\n        ...updatedMessages\n      ];\n  \n      const response = await callOpenAI(messageHistory);\n      const finalMessages = [...updatedMessages, { \n        role: 'assistant', \n        content: response,\n        timestamp: new Date().toISOString()\n      }];\n      \n      setMessages(finalMessages);\n      \n      // Only save chat history for logged-in users\n      if (userId) {\n        await saveChatHistory(finalMessages);\n      }\n    } catch (error) {\n      console.error('Error in chat interaction:', error);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: \"I apologize, but I encountered an error. Please try again.\",\n        timestamp: new Date().toISOString()\n      }]);\n    }\n  \n    setIsLoading(false);\n  };\n\n  const renderMessage = (content) => {\n    return (\n      <div className=\"whitespace-pre-wrap\">\n        {content.split('\\n').map((line, i) => (\n          <div key={i} className=\"mb-2\">{line}</div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"w-[85%] mx-auto px-4 py-4\">\n      <h1 className=\"text-2xl font-bold text-center mb-6\">Health Assistant</h1>\n\n      {!userId && (\n        <div className=\"bg-blue-50 border-l-4 border-blue-500 p-4 mb-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-blue-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-blue-700\">\n                You're using the chat assistant in guest mode. To save your chat history and get personalized recommendations, please log in or create an account.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* User Profile Display */}\n      {userProfile && (\n        <div className=\"bg-white rounded-lg p-4 mb-4 shadow-sm\">\n          <div className=\"flex justify-between items-center\">\n            <h2 className=\"text-lg font-semibold mb-2\">Your Profile</h2>\n            <button\n              onClick={() => setIsUpdatingProfile(true)}\n              className=\"text-sm text-blue-500 hover:text-blue-700\"\n            >\n              Update Profile\n            </button>\n          </div>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 text-sm\">\n            <div>\n              <span className=\"font-medium\">Age:</span> {userProfile.age}\n            </div>\n            <div>\n              <span className=\"font-medium\">Sex:</span> {userProfile.sex}\n            </div>\n            <div>\n              <span className=\"font-medium\">Height:</span> {userProfile.height}cm\n            </div>\n            <div>\n              <span className=\"font-medium\">Weight:</span> {userProfile.weight}kg\n            </div>\n            <div>\n              <span className=\"font-medium\">Activity Level:</span> {userProfile.activity}\n            </div>\n          </div>\n          <div className=\"mt-2\">\n            <span className=\"font-medium\">Goals:</span>\n            <p className=\"text-sm mt-1\">{userProfile.goals}</p>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"w-full mx-auto bg-gray-100 rounded-lg shadow-lg\">\n        <div className=\"p-8\">\n          {/* Chat container */}\n          <div \n            ref={chatContainerRef}\n            className=\"bg-white rounded-lg p-6 h-[600px] overflow-y-auto mb-6 shadow-inner\"\n          >\n            {messages.map((message, index) => (\n              <div\n                key={index}\n                className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'} mb-4`}\n              >\n                <div className=\"flex items-start max-w-[80%]\">\n                  {message.role === 'assistant' && (\n                    <div className=\"w-8 h-8 rounded-full bg-gray-200 mr-2 flex-shrink-0\" />\n                  )}\n                  <div\n                    className={`rounded-lg p-3 ${\n                      message.role === 'user'\n                        ? 'bg-blue-500 text-white'\n                        : 'bg-gray-200'\n                    }`}\n                  >\n                    {renderMessage(message.content)}\n                  </div>\n                  {message.role === 'user' && (\n                    <div className=\"w-8 h-8 rounded-full bg-gray-200 ml-2 flex-shrink-0\" />\n                  )}\n                </div>\n              </div>\n            ))}\n            {isLoading && (\n              <div className=\"flex justify-start mb-4\">\n                <div className=\"flex items-center bg-gray-200 rounded-lg p-3\">\n                  <svg className=\"animate-spin h-4 w-4 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                </div>\n              </div>\n            )}\n          </div>\n\n         {/* Input area */}\n         <div className=\"flex gap-3\">\n            <input\n              type=\"text\"\n              value={inputMessage}\n              onChange={(e) => setInputMessage(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n              placeholder=\"Type your message...\"\n              className=\"flex-1 px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            <button \n              onClick={handleSend}\n              className=\"px-8 py-3 bg-red-500 hover:bg-red-600 text-white rounded-lg transition-colors\"\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <div className=\"flex items-center\">\n                  <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Sending...\n                </div>\n              ) : (\n                'Send'\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Notification for profile updates */}\n      {isUpdatingProfile && (\n        <div className=\"fixed bottom-4 right-4 bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-4 rounded shadow-lg\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-blue-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm\">\n                Profile update mode active. Please provide your updated information.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default HealthAssistant;","import React from 'react';\nimport { HashRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Profile from './pages/Profile';\nimport HealthAssistant from './pages/HealthAssistant';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"min-h-screen bg-gray-50\">\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<Navigate to=\"/profile\" replace />} />\n          \n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/profile\" element={<Profile />} />\n          <Route path=\"/healthassistant\" element={<HealthAssistant />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}